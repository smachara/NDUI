tosca_definitions_version: tosca_simple_yaml_1_0
description: example for a NSD.

topology_template:

    inputs:
{% for node in object.nodeDataArray %}
    {% if node.category ==  'input' %}

            {{ node.name }}:
                      type: {{ node.type }}
                      default: {{ node.default }}
    {% endif %}
{% endfor %}

    node_templates:
{% for node in object.nodeDataArray %}
    {% if node.category ==  'virtual_machine' %}

        VM{{node.key}}:
            type: tosca.nodes.Compute
            capabilities:
                # Host container properties
                host:
                    properties:
                       num_cpus: {{ node.host_num_cpus  }}
                       disk_size: {{ node.host_disk_size }}
                       mem_size: {{ node.host_mem_size }}
                # Guest Operating System properties
                os:
                    properties:
                        architecture: {{ node.os_architecture }}
                        type: {{ node.os_type }}
                        distribution: {{ node.os_distribution }}
                        version: {{ node.os_version }}
    {% endif %}
    {% if node.category ==  'network' %}

        NET{{node.key}}:
                type: tosca.nodes.network.Network
                properties:
                    ip_version: {{ node.ip_version }}
                    cidr:   {{ node.cidr }}
                    start_ip: {{ node.start_ip }}
                    end_ip: {{ node.end_ip }}
    {% endif %}
{% endfor %}


{% for link in links.ports %}
        PORT-VM{{ link.binding.key }}-NET{{ link.link.key }}:
            type: tosca.nodes.network.Port
            requirements:
                - binding:
                    node: VM{{ link.binding.key }}
                - link:
                    node: NET{{ link.link.key }}
{% endfor %}


{% for service in links.services %}
        VNF-{{ service.service.category }}{{ service.service.key }}-VM{{ service.virtual_machine.key }}:
            type: tosca.nodes.nfv.VNF
            properties:
            attributes:
                    type: {{ service.service.category  == '~' ? '' : service.service.category  }}
                    address: {{ service.service.address == '~' ? '' : service.service.address }}
                    port: {{ service.service.port == '~' ? '' : service.service.port }}
                    nsh_aware: {{ service.service.nsh_aware == '~' ? '' : service.service.nsh_aware }}

            requirements:
                - host: VM{{ service.virtual_machine.key }}


        CP-{{ service.service.category }}{{ service.service.key }}-VM{{ service.virtual_machine.key }}:
              type: tosca.nodes.nfv.CP
              properties:
              attributes:
#                    IP_address:
#                    interface: ens3
#                    port: 30000
              requirements:
                    - virtualBinding: VNF-{{ service.service.category }}{{ service.service.key }}-VM{{ service.virtual_machine.key }}
                    - virtualLink: VL{{ service.service.virtual_link.key }}


{% endfor %}
{% for node in object.nodeDataArray %}
    {% if node.category ==  'virtual_link' %}

        VL{{node.key}}:

              type: tosca.nodes.nfv.VL
              properties:
                    vendor: {{ node.vendor == '~' ? '' : node.vendor }}
              attributes:
                    type: {{ node.type == '~' ? '' : node.type }}
                    transport_type: {{ node.transport_type == '~' ? '' : node.transport_type}}

    {% endif %}
{% endfor %}
        Forwarding_{% for service in links.services %}CP{{ service.service.category }}{{ service.service.key }}VM{{ service.virtual_machine.key }}{% endfor %}:
              type: tosca.nodes.nfv.FP
              description: the path ({% for service in links.services %}->CP-{{ service.service.category }}{{ service.service.key }}-VM{{ service.virtual_machine.key }}{% endfor %})
              properties:
                    policy:
              requirements:
              {% for service in links.services %}
                    - forwarder: CP-{{ service.service.category }}{{ service.service.key }}-VM{{ service.virtual_machine.key }}
              {% endfor %}

{% set vnfName = '' %}
 {% set data = '' %}
 {% for service in links.services %}
    {% set data = data ~ 'VNF-'~service.service.category~service.service.key ~'-VM'~service.virtual_machine.key~',' %}
 {% endfor %}
 {% set vnfName = vnfName ~ (data|slice(0, (data|length)-1))  %}

{% set cpList ='' %}
 {% set data = '' %}
 {% for service in links.services %}
    {#CP-{{ service.service.category }}{{ service.service.key }}-VM{{ service.virtual_machine.key }},#}
    {% set data = data ~ 'CP-'~service.service.category~service.service.key ~'-VM'~service.virtual_machine.key~',' %}
 {% endfor %}
 {% set cpList  = cpList  ~ (data |slice(0, (data|length)-1))  %}


  #################################################
  # VNF Forwarding Graph nodes and the associated
  # Network Forwarding Paths
  #################################################
    groups:
        VNF_FG1:
              type: tosca.groups.nfv.VNFFG
              description: VNF forwarding graph
              properties:
                    vendor:
                    version:
                    connection_point: [ {{ cpList }} ]
                    dependent_virtual_link: [ VL1 ]
                    constituent_vnfs: [ {{ vnfName }} ]
              members: [ Forwarding_{{ cpList }} ]

    outputs:
{% for node in object.nodeDataArray %}
    {% if node.category ==  'virtual_machine' %}

            VM{{node.key}}_ip:
                        value: { get_attribute: [VM{{node.key}}, private_address] }
    {% endif %}
{% endfor %}